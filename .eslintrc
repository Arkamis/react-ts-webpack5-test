{
  "root": true,
    "env": {
        "browser": true,
        "es2021": true,
				"es6": true 
    },
     "settings": {
      "react":{
        "version": "detect"
      },
      "import/resolver": {
        "typescript":{}
      },
      "import/parsers": {
        "@typescript-eslint/parser": [".ts", ".tsx"]
      }
    },
		"parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": "latest",
      "project": [ "./tsconfig.json"],
      "sourceType": "module",
      "ecmaFeatures": {
        "jsx": true
      }
		},
    "plugins": [
        "react",
        "@typescript-eslint",
        "react-hooks", 
        "simple-import-sort",
				"import",
        "prettier"
    ],
      "extends": [
        "plugin:react/recommended",
        "standard-with-typescript",
        "eslint:recommended", 
        "plugin:import/errors",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended",
        "prettier"
    ],
     "rules": {
      "@typescript-eslint/explicit-function-return-type": "off",
      "@typescript-eslint/strict-boolean-expressions": "off",
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn",
        "no-use-before-define": "error",
        "@typescript-eslint/no-use-before-define": ["error"],
        "no-unused-vars":"error",
        "@typescript-eslint/no-unused-vars": "error",
        // to enforce using type for object type definitions, can be type or interface 
        "@typescript-eslint/consistent-type-definitions": ["error", "type"],
        "prettier/prettier": [
            "error",
            {
                "endOfLine": "auto"
            }
        ],
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": ["error"],
        "simple-import-sort/imports": "error",
        "simple-import-sort/exports": "off",
        "import/no-extraneous-dependencies": "off",
        "import/prefer-default-export": "off",
				 "import/first": "error",
				"import/newline-after-import": "error",
				"import/no-duplicates": "error",
        "import/extensions": [
            "error",
            "ignorePackages",
            {
            "ts": "never",
            "tsx": "never"
            }
        ],
        "max-len": ["warn", { "code": 80 }]
    }
}
